local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "WeroHub - Speed Boost",
    LoadingTitle = "WeroHub",
    LoadingSubtitle = "By WeroScripts",
    ConfigurationSaving = {
        Enabled = false
    },
    Discord = {
        Enabled = false
    },
    KeySystem = false
})

local originalWalkSpeed = 34
local boostedWalkSpeed = 60
local speedBypassConnection
local speedToggle = false

local Tab = Window:CreateTab("Speed", 4483362458)

-- Speed bypass toggle
Tab:CreateToggle({
    Name = "Speed 60 Bypass(Buy SpeedCoil Equip and Unequip for no problems)",
    CurrentValue = false,
    Flag = "SpeedToggle",
    Callback = function(value)
        local char = player.Character or player.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        if not hum then return end

        speedToggle = value

        if value then
            hum.WalkSpeed = boostedWalkSpeed
            speedBypassConnection = RunService.Heartbeat:Connect(function()
                pcall(function()
                    if hum and hum.WalkSpeed ~= boostedWalkSpeed then
                        hum.WalkSpeed = boostedWalkSpeed
                    end
                end)
            end)
        else
            if speedBypassConnection then
                speedBypassConnection:Disconnect()
                speedBypassConnection = nil
            end
            hum.WalkSpeed = originalWalkSpeed
        end
    end,
})

-- Mostrar/Ocultar botón Fly to Spawn
local flyButtonToggle = false
Tab:CreateToggle({
    Name = "Mostrar Botón Fly to Spawn",
    CurrentValue = false,
    Flag = "FlyButtonToggle",
    Callback = function(value)
        flyButtonToggle = value
        flyButton.Visible = flyButtonToggle
        if flyButtonToggle then
            spawnPos = hrp.Position -- Actualiza spawnPos
        end
    end,
})

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local RunService = game:GetService("RunService")

local savedPosition = nil
local isMovingAndJumping = false

local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local flyTab = Window:CreateTab("TP/Fly", 4483362458)

-- Botón para guardar posición
flyTab:CreateButton({
    Name = "Save Position",
    Callback = function()
        local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            savedPosition = hrp.Position
            Rayfield:Notify({
                Title = "WeroHub",
                Content = "¡Posición guardada correctamente!",
                Duration = 3
            })
        end
    end,
})

-- Toggle para caminar y saltar alto al destino
flyTab:CreateToggle({
    Name = "Walk & High Jump to Saved Pos",
    CurrentValue = false,
    Flag = "WalkHighJumpToggle",
    Callback = function(enabled)
        if enabled and savedPosition then
            isMovingAndJumping = true

            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local hrp = character:FindFirstChild("HumanoidRootPart")

            -- Aumentar JumpPower para saltar más alto (aprox 50 studs)
            local originalJumpPower = humanoid.JumpPower
            humanoid.JumpPower = 150 -- ajusta para lograr unos 50 studs de salto

            humanoid.WalkSpeed = 16 -- velocidad normal

            -- Mover y saltar repetidamente
            humanoid:MoveTo(savedPosition)

            local reached = false

            local connection
            connection = humanoid.MoveToFinished:Connect(function(reachedSuccessfully)
                reached = reachedSuccessfully
                isMovingAndJumping = false
                connection:Disconnect()
            end)

            -- Loop para saltar mientras camina
            spawn(function()
                while isMovingAndJumping do
                    if humanoid.FloorMaterial ~= Enum.Material.Air then
                        humanoid.Jump = true
                    end
                    task.wait(0.3)
                end
            end)

            -- Esperar hasta que llegue
            while isMovingAndJumping do
                task.wait(0.1)
            end

            -- Restaurar JumpPower
            humanoid.JumpPower = originalJumpPower

            Rayfield:Notify({
                Title = "WeroHub",
                Content = "¡Llegaste a la posición!",
                Duration = 3
            })

        else
            isMovingAndJumping = false
            -- Restaurar valores si cancelas
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.JumpPower = 50 -- valor por defecto usual
                    humanoid.WalkSpeed = 16
                end
            end
        end
    end,
})
