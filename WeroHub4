local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "WeroHub - Speed Boost",
    LoadingTitle = "WeroHub",
    LoadingSubtitle = "By WeroScripts",
    ConfigurationSaving = {
        Enabled = false
    },
    Discord = {
        Enabled = false
    },
    KeySystem = false
})

local Tab = Window:CreateTab("Speed", 4483362458)

Tab:CreateToggle({
    Name = "Speed 60 Bypass(Buy SpeedCoil Equip and Unequip for no problems)",
    CurrentValue = false,
    Flag = "SpeedToggle",
    Callback = function(value)
        local char = player.Character or player.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        if not hum then return end

        speedToggle = value

        if value then
            hum.WalkSpeed = boostedWalkSpeed
            speedBypassConnection = RunService.Heartbeat:Connect(function()
                pcall(function()
                    if hum and hum.WalkSpeed ~= boostedWalkSpeed then
                        hum.WalkSpeed = boostedWalkSpeed
                    end
                end)
            end)
        else
            if speedBypassConnection then
                speedBypassConnection:Disconnect()
                speedBypassConnection = nil
            end
            hum.WalkSpeed = originalWalkSpeed
        end
    end,
})

local savedPosition = nil
local flying = false

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

local flyTab = Window:CreateTab("TP/Fly", 4483362458)

-- Bot√≥n para guardar posici√≥n
flyTab:CreateButton({
    Name = "Save Position",
    Callback = function()
        savedPosition = hrp.Position
        Rayfield:Notify({
            Title = "WeroHub",
            Content = "¬°Posici√≥n guardada correctamente!",
            Duration = 3
        })
    end,
})

-- Toggle para volar a la posici√≥n guardada
flyTab:CreateToggle({
    Name = "Fly to Saved Pos",
    CurrentValue = false,
    Flag = "FlyToSavedPos",
    Callback = function(enabled)
        flying = enabled

        if flying and savedPosition then
            -- Elevar al cielo
            local upTween = TweenService:Create(hrp, TweenInfo.new(0.4, Enum.EasingStyle.Sine), { Position = hrp.Position + Vector3.new(0, 10, 0) })
            upTween:Play()
            upTween.Completed:Wait()

            -- Bypass detecci√≥n (reduce fricci√≥n)
            humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
            humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
            character:FindFirstChildOfClass("Humanoid").PlatformStand = true

            -- Calcular duraci√≥n del vuelo
            local distance = (Vector3.new(savedPosition.X, hrp.Position.Y, savedPosition.Z) - hrp.Position).Magnitude
            local speed = 56
            local time = distance / speed

            -- Tween horizontal
            local moveTween = TweenService:Create(hrp, TweenInfo.new(time, Enum.EasingStyle.Linear), {
                Position = Vector3.new(savedPosition.X, hrp.Position.Y, savedPosition.Z)
            })
            moveTween:Play()
            moveTween.Completed:Wait()

            -- Bajar 10 studs
            local downTween = TweenService:Create(hrp, TweenInfo.new(0.4, Enum.EasingStyle.Sine), { Position = savedPosition })
            downTween:Play()
            downTween.Completed:Wait()

            -- Restaurar controles
            character:FindFirstChildOfClass("Humanoid").PlatformStand = false
            humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
            humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)

            Rayfield:Notify({
                Title = "WeroHub",
                Content = "Has sido transportado con √©xito üõ©Ô∏è",
                Duration = 3
            })
        end
    end,
})
