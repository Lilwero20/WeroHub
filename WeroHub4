local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")


local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "WeroHub Steal a Brainrot",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by WeroScripts",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local originalWalkSpeed = 34
local boostedWalkSpeed = 60
local speedToggle = false

local spawnPos = hrp.Position

-- Crear ScreenGui para los botones (padre de los botones)
local playerGui = player:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BypassButtonsGui"
screenGui.Parent = playerGui

-- Crear botón Fly to Spawn (invisible al inicio)
local flyButton = Instance.new("TextButton")
flyButton.Size = UDim2.new(0, 160, 0, 50)
flyButton.Position = UDim2.new(0.5, -80, 0.8, 0)
flyButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
flyButton.TextColor3 = Color3.new(1,1,1)
flyButton.Font = Enum.Font.GothamBold
flyButton.TextSize = 20
flyButton.Text = "Fly to Spawn"
flyButton.Visible = false
flyButton.Parent = screenGui

-- Crear botón Instant TP Up (invisible al inicio)
local instantTPButton = flyButton:Clone()
instantTPButton.Position = UDim2.new(0.5, -80, 0.7, 0)
instantTPButton.Text = "Instant TP Up 50"
instantTPButton.Visible = false
instantTPButton.Parent = screenGui

-- Función para cambiar velocidad con bypass
local function setSpeed(speed)
    if humanoid then
        humanoid.WalkSpeed = speed
    end
end

-- Función vuelo gradual para "Fly to Spawn"
local function flyToPosition(targetPos)
    if not hrp or not hrp.Parent then return end
    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(1e5,1e5,1e5)
    bv.Velocity = Vector3.new(0,0,0)
    bv.Parent = hrp

    local flying = true

    RunService:BindToRenderStep("FlyBypass", 301, function()
        if not flying or not hrp or not hrp.Parent then
            flying = false
            RunService:UnbindFromRenderStep("FlyBypass")
            bv:Destroy()
            return
        end
        local direction = (targetPos - hrp.Position)
        local dist = direction.Magnitude
        if dist < 1 then
            flying = false
            RunService:UnbindFromRenderStep("FlyBypass")
            bv:Destroy()
            return
        end
        bv.Velocity = direction.Unit * 59
    end)
end

-- Función para instant TP arriba con tween
local function instantTPUp()
    if not hrp then return end
    local targetPos = hrp.Position + Vector3.new(0,50,0)
    local tween = TweenService:Create(hrp, TweenInfo.new(0.15, Enum.EasingStyle.Linear), {CFrame = CFrame.new(targetPos)})
    tween:Play()
end

-- Setup Rayfield Window y pestaña
local Window = Rayfield:CreateWindow({
    Name = "WeroHub - Speed & Teleport Bypass",
    LoadingTitle = "WeroHub",
    LoadingSubtitle = "Speed & Teleport",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil,
       FileName = "WeroHubConfig"
    },
    Discord = {
       Enabled = false,
    },
    KeySystem = false,
})

local Tab = Window:CreateTab("Main")

-- Toggle para velocidad
Tab:CreateToggle({
    Name = "Speed Bypass (60)",
    CurrentValue = false,
    Flag = "SpeedToggle",
    Callback = function(value)
        speedToggle = value
        if speedToggle then
            setSpeed(boostedWalkSpeed)
        else
            setSpeed(originalWalkSpeed)
        end
    end
})

-- Toggle para mostrar botón Fly to Spawn
local flyButtonToggle = false
Tab:CreateToggle({
    Name = "Show Fly to Spawn Button",
    CurrentValue = false,
    Flag = "FlyButtonToggle",
    Callback = function(value)
        flyButtonToggle = value
        flyButton.Visible = flyButtonToggle
        if flyButtonToggle then
            spawnPos = hrp.Position -- Actualiza spawnPos al abrir toggle
        end
    end
})

-- Toggle para mostrar botón Instant TP Up
local instantTPButtonToggle = false
Tab:CreateToggle({
    Name = "Show Instant TP Up Button",
    CurrentValue = false,
    Flag = "InstantTPButtonToggle",
    Callback = function(value)
        instantTPButtonToggle = value
        instantTPButton.Visible = instantTPButtonToggle
    end
})

-- Eventos de botones
flyButton.MouseButton1Click:Connect(function()
    flyToPosition(spawnPos)
end)

instantTPButton.MouseButton1Click:Connect(function()
    instantTPUp()
end)
