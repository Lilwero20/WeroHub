local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "WeroHub",
    Icon = 89001596756285,
    LoadingTitle = "Loading WeroHub",
    LoadingSubtitle = "by Wero",
    Theme = "Amethyst",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = { Enabled = true, FolderName = nil, FileName = "Big Hub" },
    Discord = { Enabled = false, Invite = "noinvitelink", RememberJoins = true },
    KeySystem = false,
    KeySettings = {
        Title = "Untitled", Subtitle = "Key System", Note = "No method of obtaining the key is provided",
        FileName = "Key", SaveKey = true, GrabKeyFromSite = false, Key = {"Hello"}
    }
})

-- Tab Creation
local TeleportTab   = Window:CreateTab("Teleport", 4483362458)
local PlayerTab     = Window:CreateTab("Player", 4483362458)
local ScriptsTab    = Window:CreateTab("Scripts", 4483362458)
local CharacterTab  = Window:CreateTab("Modificar Características", 4483362458)
local HerramientasTab = Window:CreateTab("🔧 Herramientas", 4483362458)
local TrolearTab    = Window:CreateTab("Trolear", 4483362458)

-- Services
local Players           = game:GetService("Players")
local TweenService      = game:GetService("TweenService")
local Workspace         = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerScriptService = game:GetService("ServerScriptService")

local localPlayer = Players.LocalPlayer

-- ============================================================
-- TELEPORT TAB
-- ============================================================
-- TP to Player
TeleportTab:CreateInput({
    Name = "TP to Player", PlaceholderText = "Player Name", RemoveTextAfterFocusLost = false,
    Flag = "TPToPlayer", Callback = function(text)
        local plr = Players:FindFirstChild(text)
        if plr and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local hrp = plr.Character.HumanoidRootPart
            local myHrp = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
            if myHrp then
                -- Ascend
                myHrp.CFrame = myHrp.CFrame * CFrame.new(0, 10, 0)
                -- Fly
                local targetPos = hrp.Position + Vector3.new(0, 10, 0)
                local dist = (targetPos - myHrp.Position).Magnitude
                local tween = TweenService:Create(myHrp, TweenInfo.new(dist/250, Enum.EasingStyle.Linear), {CFrame = CFrame.new(targetPos)})
                tween:Play()
                tween.Completed:Connect(function()
                    local descend = TweenService:Create(myHrp, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {CFrame = CFrame.new(hrp.Position)})
                    descend:Play()
                end)
            end
        end
    end,
})

-- TP to Fruit
TeleportTab:CreateToggle({
    Name = "Tp to Fruit", CurrentValue = false, Flag = "TpToFruit",
    Callback = function(active)
        if not active then return end
        local myHrp = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
        if not myHrp then return end
        local closest, dist = nil, math.huge
        for _, obj in ipairs(Workspace:GetChildren()) do
            if obj:IsA("Tool") and obj:FindFirstChild("Handle") then
                local d = (obj.Handle.Position - myHrp.Position).Magnitude
                if d < dist then dist, closest = d, obj end
            end
        end
        if closest then
            local tween = TweenService:Create(myHrp, TweenInfo.new(dist/250, Enum.EasingStyle.Linear), {CFrame = CFrame.new(closest.Handle.Position)})
            tween:Play()
        end
    end,
})

-- Ir a GoldenChest
TeleportTab:CreateButton({
    Name = "Ir a GoldenChest", Callback = function()
        local char = localPlayer.Character
        if not (char and char:FindFirstChild("HumanoidRootPart")) then return end
        local hrp = char.HumanoidRootPart
        local target = Workspace:WaitForChild("BoatStages"):WaitForChild("NormalStages"):WaitForChild("TheEnd"):WaitForChild("GoldenChest"):WaitForChild("Trigger")
        -- Ascend
        TweenService:Create(hrp, TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = hrp.CFrame * CFrame.new(0,20,0)}):Play()
        -- Teleport up near
        task.wait(0.3)
        hrp.CFrame = CFrame.new(target.Position + Vector3.new(0,100,0))
        task.wait(0.3)
        -- Fly over
        local above = target.Position + Vector3.new(0,20,0)
        local dist = (above - hrp.Position).Magnitude
        TweenService:Create(hrp, TweenInfo.new(dist/250, Enum.EasingStyle.Linear), {CFrame = CFrame.new(above)}):Play()
        -- Descend
        task.wait(dist/250)
        TweenService:Create(hrp, TweenInfo.new((hrp.Position - (target.Position+Vector3.new(0,3,0))).Magnitude/100, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {CFrame = CFrame.new(target.Position+Vector3.new(0,3,0))}):Play()
    end,
})

-- ============================================================
-- PLAYER TAB
-- ============================================================
-- Infinite Health
PlayerTab:CreateToggle({
    Name = "Inf Health", CurrentValue = false, Flag = "InfHealth",
    Callback = function(active)
        local char = localPlayer.Character
        if not char then return end
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if not humanoid then return end
        if active then
            humanoid.Health = humanoid.MaxHealth
            humanoid.HealthChanged:Connect(function() humanoid.Health = humanoid.MaxHealth end)
        end
    end,
})

-- Godmode
PlayerTab:CreateToggle({
    Name = "Godmode", CurrentValue = false, Flag = "Godmode",
    Callback = function(active)
        local char = localPlayer.Character
        if not char then return end
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if not humanoid then return end
        if active then
            humanoid.MaxHealth = math.huge; humanoid.Health = humanoid.MaxHealth
            humanoid.HealthChanged:Connect(function() humanoid.Health = humanoid.MaxHealth end)
        else
            humanoid.MaxHealth = 100; humanoid.Health = 100
        end
    end,
})

-- ============================================================
-- CHARACTER MODIFICATION TAB
-- ============================================================
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Modify Health Max
CharacterTab:CreateSlider({Name="Modificar Vida", Range={0,500}, Increment=10, Suffix="Vida", CurrentValue=humanoid.MaxHealth, Flag="HealthSlider",
    Callback = function(val) humanoid.MaxHealth=val; humanoid.Health=val end
})

-- Modify WalkSpeed
CharacterTab:CreateSlider({Name="Modificar WalkSpeed", Range={0,100}, Increment=1, Suffix="Velocidad", CurrentValue=humanoid.WalkSpeed, Flag="SpeedSlider",
    Callback = function(val) humanoid.WalkSpeed=val end
})

-- Modify JumpPower
CharacterTab:CreateSlider({Name="Modificar JumpPower", Range={0,200}, Increment=1, Suffix="Salto", CurrentValue=humanoid.JumpPower, Flag="JumpSlider",
    Callback = function(val) humanoid.JumpPower=val end
})

-- Add Accessory by ID
CharacterTab:CreateInput({Name="ID de Accesorio", PlaceholderText="Pon el ID del accesorio", RemoveTextAfterFocusLost=false,
    Callback = function(id)
        local ok,Model = pcall(function() return game:GetService("InsertService"):LoadAsset(id) end)
        if ok and Model then
            local acc = Model:GetChildren()[1]
            if acc then acc.Parent=character end
        end
    end,
})

-- ============================================================
-- SCRIPTS TAB
-- ============================================================
ScriptsTab:CreateButton({Name="Infinity yield", Callback=function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end})

ScriptsTab:CreateButton({Name="Dex", Callback=function()
    loadstring(game:HttpGet("https://pastebin.com/raw/FeMbE4xS"))()
end})

ScriptsTab:CreateButton({Name="DeadRails", Callback=function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/gumanba/Scripts/main/DeadRails"))()
end})

-- ============================================================
-- HERRAMIENTAS TAB
-- ============================================================
-- Give All Tools
HerramientasTab:CreateButton({
    Name = "Dar TODAS las herramientas",
    Callback = function()
        local backpack = localPlayer:WaitForChild("Backpack")
        for _,c in pairs({ReplicatedStorage, game.StarterPack, Workspace}) do
            for _,item in ipairs(c:GetDescendants()) do
                if item:IsA("Tool") then
                    item:Clone().Parent = backpack
                end
            end
        end
    end,
})

-- Duplicate Equipped Tool
HerramientasTab:CreateButton({Name="Duplicar herramienta equipada", Callback=function()
    local char = localPlayer.Character
    if char then
        for _,tool in ipairs(char:GetChildren()) do
            if tool:IsA("Tool") then tool:Clone().Parent=localPlayer.Backpack end
        end
    end
end})

-- ============================================================
-- TROLEAR TAB
-- ============================================================
-- Install ResizePlayer System
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerScriptService = game:GetService("ServerScriptService")
local Players = game:GetService("Players")

-- Botón para instalar ResizePlayer
TrolearTab:CreateButton({
    Name = "📦 Instalar ResizePlayer",
    Callback = function()
        if not ReplicatedStorage:FindFirstChild("ResizePlayer") then
		mantenimiento.Parent = StarterGui
            local remote = Instance.new("RemoteEvent")
            remote.Name = "ResizePlayer"
            remote.Parent = ReplicatedStorage
        end

        if not ServerScriptService:FindFirstChild("ResizePlayerScript") then
            local src = [[
                local RS = game:GetService("ReplicatedStorage")
                local PS = game:GetService("Players")
                RS:WaitForChild("ResizePlayer").OnServerEvent:Connect(function(_, name, scale)
                    local p = PS:FindFirstChild(name)
                    if p and p.Character then
                        for _, d in ipairs(p.Character:GetDescendants()) do
                            if d:IsA("BasePart") then
                                d.Size *= scale
                            end
                        end
                        local h = p.Character:FindFirstChildOfClass("Humanoid")
                        if h then
                            h.HipHeight *= scale
                            h:BuildRigFromAttachments()
                        end
                    end
                end)
            ]]
            local scr = Instance.new("Script")
            scr.Name = "ResizePlayerScript"
            scr.Source = src
            scr.Parent = ServerScriptService
        end
    end
})

-- Inputs para nombre y escala
TrolearTab:CreateInput({
    Name = "👤 Nombre del jugador",
    PlaceholderText = "Escribe el nombre exacto",
    RemoveTextAfterFocusLost = false,
    Callback = function(Value)
        _G.ResizeTarget = Value
    end,
})

TrolearTab:CreateInput({
    Name = "📏 Escala (ej: 1.2)",
    PlaceholderText = "Factor de escala",
    RemoveTextAfterFocusLost = false,
    Callback = function(Value)
        _G.ResizeScale = tonumber(Value)
    end,
})

-- Botón para aplicar la escala
TrolearTab:CreateButton({
    Name = "✅ Aplicar Escala",
    Callback = function()
        if ReplicatedStorage:FindFirstChild("ResizePlayer") and _G.ResizeTarget and _G.ResizeScale then
            ReplicatedStorage.ResizePlayer:FireServer(_G.ResizeTarget, _G.ResizeScale)
        else
            warn("Faltan datos o RemoteEvent no existe")
        end
    end
})


-- Resize Buttons would go here after installation if desired


