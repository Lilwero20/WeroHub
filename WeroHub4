local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "WeroHub - Speed Boost",
    LoadingTitle = "WeroHub",
    LoadingSubtitle = "By WeroScripts",
    ConfigurationSaving = {
        Enabled = false
    },
    Discord = {
        Enabled = false
    },
    KeySystem = false
})

local Tab = Window:CreateTab("Speed", 4483362458)

Tab:CreateToggle({
    Name = "Speed 60 Bypass(Buy SpeedCoil Equip and Unequip for no problems)",
    CurrentValue = false,
    Flag = "SpeedToggle",
    Callback = function(value)
        local char = player.Character or player.CharacterAdded:Wait()
        local hum = char:FindFirstChildOfClass("Humanoid")
        if not hum then return end

        speedToggle = value

        if value then
            hum.WalkSpeed = boostedWalkSpeed
            speedBypassConnection = RunService.Heartbeat:Connect(function()
                pcall(function()
                    if hum and hum.WalkSpeed ~= boostedWalkSpeed then
                        hum.WalkSpeed = boostedWalkSpeed
                    end
                end)
            end)
        else
            if speedBypassConnection then
                speedBypassConnection:Disconnect()
                speedBypassConnection = nil
            end
            hum.WalkSpeed = originalWalkSpeed
        end
    end,
})

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")

local savedPosition = nil
local isWalkingAndJumping = false

local flyTab = Window:CreateTab("TP/Fly", 4483362458)

-- Botón para guardar posición
flyTab:CreateButton({
    Name = "Save Position",
    Callback = function()
        savedPosition = hrp.Position
        Rayfield:Notify({
            Title = "WeroHub",
            Content = "¡Posición guardada correctamente!",
            Duration = 3
        })
    end,
})

-- Toggle para caminar y saltar hacia la posición guardada
flyTab:CreateToggle({
    Name = "Walk & High Jump to Saved Pos",
    CurrentValue = false,
    Flag = "WalkJumpToggle",
    Callback = function(enabled)
        if enabled and savedPosition then
            isWalkingAndJumping = true

            -- Establecer velocidad normal del juego (ajusta si sabes cuál es)
            local normalWalkSpeed = 16
            humanoid.WalkSpeed = normalWalkSpeed

            while isWalkingAndJumping and player.Character and player.Character:FindFirstChild("HumanoidRootPart") do
                local hrp = player.Character.HumanoidRootPart
                local distance = (savedPosition - hrp.Position).Magnitude
                if distance < 2 then
                    isWalkingAndJumping = false
                    Rayfield:Notify({
                        Title = "WeroHub",
                        Content = "Llegaste a la posición",
                        Duration = 3
                    })
                    break
                end

                -- Movimiento hacia la posición (simple dirección)
                local direction = (savedPosition - hrp.Position).Unit
                humanoid:Move(direction, false)

                -- Saltar alto si está en el suelo
                if humanoid.FloorMaterial ~= Enum.Material.Air then
                    humanoid.Jump = true
                end

                task.wait(0.1)
            end

            humanoid.WalkSpeed = normalWalkSpeed -- Opcional: restaurar velocidad al final

        else
            isWalkingAndJumping = false
            humanoid.WalkSpeed = 16 -- restaurar velocidad normal
        end
    end,
})
