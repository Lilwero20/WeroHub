-- ðŸ”¹ Script Local (StarterGui o StarterPlayerScripts)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- ðŸ”¹ Remotes
local RFCoinsShopServiceRequestBuy = ReplicatedStorage.Packages.Net["RF/CoinsShopService/RequestBuy"] -- RemoteFunction
local REUseItem = ReplicatedStorage.Packages.Net["RE/UseItem"]

-- ðŸ”¹ Variables
local running = false
local toolName = "Taser Gun"
local holding = false
local holdStart = 0
local holdDetected = false
local targetPrompt = nil -- ProximityPrompt objetivo

-- =================================
-- ðŸ”¹ GUI Toggle
-- =================================
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "TaserToggleGUI"
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 150, 0, 50)
frame.Position = UDim2.new(0.05, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.BackgroundTransparency = 0.2
frame.ZIndex = 10
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

-- ðŸ”¹ Toggle Button
local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(1, -10, 1, -10)
toggleButton.Position = UDim2.new(0, 5, 0, 5)
toggleButton.Text = "ðŸ”´ OFF"
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 20
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
toggleButton.AutoButtonColor = true
toggleButton.Active = true
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 10)

-- =================================
-- ðŸ”¹ Hacer que el Frame sea draggable
-- =================================
local dragging = false
local dragStart, startPos
local UserInputService = game:GetService("UserInputService")

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end
end)

frame.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

-- =================================
-- ðŸ”¹ Funciones
-- =================================
local function buyAndEquip()
    local success, result = pcall(function()
        return RFCoinsShopServiceRequestBuy:InvokeServer(toolName)
    end)
    if not success then warn("Error al comprar:", result) end

    task.wait(0.5)
    local tool = player.Backpack:FindFirstChild(toolName)
    if tool then player.Character.Humanoid:EquipTool(tool) end
end

local function useTaserAndTeleport()
    local char = player.Character or player.CharacterAdded:Wait()
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if hrp then
        REUseItem:FireServer(hrp)
        hrp.CFrame = hrp.CFrame + hrp.CFrame.LookVector * 20 -- 20 studs adelante
    end
end

-- ðŸ”¹ Detectar ProximityPrompt
local function detectPrompt()
    -- Buscar todos los prompts en el workspace
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("ProximityPrompt") then
            targetPrompt = obj
            break
        end
    end
end

-- ðŸ”¹ Loop para detectar hold automÃ¡ticamente
local function checkPromptHold(dt)
    if targetPrompt then
        local playerChar = player.Character
        if not playerChar then return end
        local hrp = playerChar:FindFirstChild("HumanoidRootPart")
        if not hrp then return end

        local distance = (targetPrompt.Parent.Position - hrp.Position).Magnitude
        if distance <= targetPrompt.MaxActivationDistance then
            local progress = targetPrompt:GetHoldProgress()
            if not holdDetected and progress >= 1 - (0.5 / targetPrompt.HoldDuration) then
                holdDetected = true
                useTaserAndTeleport()
            end
        end
    end
end

-- ðŸ”¹ Loop principal
task.spawn(function()
    while true do
        task.wait(0.03)
        if running then
            checkPromptHold(0.03)
        end
    end
end)

-- ðŸ”¹ Iniciar/Detener
local function startTaser()
    running = true
    buyAndEquip()
    detectPrompt()
end

local function stopTaser()
    running = false
    targetPrompt = nil
    holdDetected = false
end

-- ðŸ”¹ Toggle Logic
toggleButton.MouseButton1Click:Connect(function()
    if running then
        stopTaser()
        toggleButton.Text = "ðŸ”´ OFF"
        toggleButton.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
    else
        startTaser()
        toggleButton.Text = "ðŸŸ¢ ON"
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
    end
end)
