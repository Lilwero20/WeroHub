local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "WeroHub",
    Icon = 89001596756285,
    LoadingTitle = "Loading WeroHub",
    LoadingSubtitle = "by Wero",
    Theme = "Amethyst",
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,
    ConfigurationSaving = { Enabled = true, FolderName = nil, FileName = "Big Hub" },
    Discord = { Enabled = false, Invite = "noinvitelink", RememberJoins = true },
    KeySystem = false,
    KeySettings = {
        Title = "Untitled", Subtitle = "Key System", Note = "No method of obtaining the key is provided",
        FileName = "Key", SaveKey = true, GrabKeyFromSite = false, Key = {"Hello"}
    }
})

local Tab = Window:CreateTab("Fly to Player", 4483362458)

local playerNames = {}

local function updatePlayerNames()
    playerNames = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end
end

updatePlayerNames()

local dropdown = Tab:CreateDropdown({
    Name = "Selecciona un jugador",
    Options = playerNames,
    CurrentOption = playerNames[1] or "",
    Flag = "PlayerSelector",
    Callback = function(option)
        print("Jugador seleccionado:", option)
    end
})

Players.PlayerAdded:Connect(function()
    updatePlayerNames()
    if dropdown then
        dropdown:SetOptions(playerNames)
    end
end)

Players.PlayerRemoving:Connect(function()
    updatePlayerNames()
    if dropdown then
        dropdown:SetOptions(playerNames)
    end
end)

local flying = false
local flySpeed = 250

local function smoothVerticalMove(humanoidRootPart, targetY)
    while humanoidRootPart and math.abs(humanoidRootPart.Position.Y - targetY) > 0.1 do
        local currentPos = humanoidRootPart.Position
        local direction = targetY > humanoidRootPart.Position.Y and 1 or -1
        local newY = math.clamp(
            humanoidRootPart.Position.Y + direction * 0.5,
            math.min(humanoidRootPart.Position.Y, targetY),
            math.max(humanoidRootPart.Position.Y, targetY)
        )
        humanoidRootPart.CFrame = CFrame.new(currentPos.X, newY, currentPos.Z)
        RunService.Heartbeat:Wait()
    end
end

local button = Tab:CreateButton({
    Name = "Volar hacia el jugador",
    Callback = function()
        if flying then
            warn("Ya estás volando. Espera a que termine.")
            return
        end

        local targetName = dropdown:Get()
        if not targetName or targetName == "" then
            warn("No has seleccionado ningún jugador.")
            return
        end

        local targetPlayer = Players:FindFirstChild(targetName)
        if not targetPlayer then
            warn("El jugador seleccionado no existe o salió.")
            return
        end

        local localPlayer = Players.LocalPlayer
        local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

        if not humanoidRootPart then
            warn("No se encontró HumanoidRootPart")
            return
        end

        if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            warn("Jugador objetivo no válido o sin personaje")
            return
        end

        flying = true
        local targetHRP = targetPlayer.Character.HumanoidRootPart

        -- Subir 10 studs
        smoothVerticalMove(humanoidRootPart, humanoidRootPart.Position.Y + 10)

        -- Volar hacia el objetivo
        while flying and humanoidRootPart and targetHRP and (humanoidRootPart.Position - targetHRP.Position).Magnitude > 5 do
            local delta = RunService.Heartbeat:Wait()
            local direction = (targetHRP.Position - humanoidRootPart.Position).Unit
            local moveVector = direction * flySpeed * delta
            humanoidRootPart.CFrame = humanoidRootPart.CFrame + moveVector
        end

        -- Bajar 10 studs
        smoothVerticalMove(humanoidRootPart, humanoidRootPart.Position.Y - 10)

        flying = false
    end
})
